server.port=8082
#H2 Database
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true


#Postgres Database
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver


#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
#spring.application.name=job-service

#Zipkin
#this will trace all the requests for ,microservices
management.tracing.sampling.probability=1.0 

#below can be used for specifying the endpoint
#management.zipkin.tracing.endpoint=http://localhost:9411

#Config server
spring.config.import=optional:configserver:http://localhost:8080
spring.profiles.active=default

#Ribbon
spring.cloud.loadbalancer.ribbon.enabled=false



#Resilience4j
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindow.size=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3

resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s

#Actuator
management.health.circuitbreaker.enabled=true
#trigger http://localhost:8082/actuator/circuitbreakerevents for checking circuitbreaker events
#trigger http://localhost:8082/actuator/circuitbreakers to see circuitbreaker details
management.endpoints.web.exposure.include=health,circuitbreakers,circuitbreakerevents


management.endpoint.health.show-details=always


